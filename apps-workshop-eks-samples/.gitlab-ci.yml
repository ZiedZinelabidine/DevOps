stages:
  - lint
  - test
  - deploy

variables:
  HELMFILE_PATH: ./src/app/helmfile.yaml

# 1. Lint (vérifier syntaxe Helmfile)
#lint:
#  stage: lint
 # image: alpine:latest
#  script:
 #   - apk add --no-cache bash curl jq
 #   - curl -LO https://github.com/roboll/helmfile/releases/latest/download/helmfile_linux_amd64
  #  - chmod +x helmfile_linux_amd64
   # - mv helmfile_linux_amd64 /usr/local/bin/helmfile
  #  - helmfile lint -f "$HELMFILE_PATH"
 # only:
  #  - merge_requests
  #  - main

# 2. Test (diff pour voir les changements)
#test:
#  stage: test
 # image: alpine:latest
 # script:
  #  - apk add --no-cache bash curl jq
  #  - curl -LO https://github.com/roboll/helmfile/releases/latest/download/helmfile_linux_amd64
  #  - chmod +x helmfile_linux_amd64
   # - mv helmfile_linux_amd64 /usr/local/bin/helmfile
   # - helmfile diff -f "$HELMFILE_PATH"
  #only:
   # - main

# 3. Déploiement sur AWS EKS
deploy:
  stage: deploy
  image: ubuntu:22.04
  before_script:
    - apt-get update && apt-get install -y curl unzip bash jq git
    # Installer Helm
    - curl -fsSL -o get_helm.sh https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
    - chmod 700 get_helm.sh
    - ./get_helm.sh
    - helm plugin install https://github.com/databus23/helm-diff
    # Installer AWS CLI dans un dossier local
    - curl -Lo awscli.zip https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip
    - unzip awscli.zip
    - ./aws/install -b ./aws-cli
    - export PATH="$PWD/aws-cli:$PATH"
    - aws --version
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mkdir -p ./bin
    - mv kubectl ./bin/
    - export PATH="$PWD/bin:$PATH"
    - kubectl version --client
    # Assumer le rôle IAM
    - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::549328952149:role/devops-staging --role-session-name kube --output json)
    - export AWS_ACCESS_KEY_ID=$(echo $CREDENTIALS | jq -r .Credentials.AccessKeyId)
    - export AWS_SECRET_ACCESS_KEY=$(echo $CREDENTIALS | jq -r .Credentials.SecretAccessKey)
    - export AWS_SESSION_TOKEN=$(echo $CREDENTIALS | jq -r .Credentials.SessionToken)
    # Mettre à jour kubeconfig
    - aws eks update-kubeconfig --region $AWS_DEFAULT_REGION --name $EKS_CLUSTER_NAME
    - kubectl get nodes
    # Installer Helmfile
    - curl -LO https://github.com/roboll/helmfile/releases/latest/download/helmfile_linux_amd64
    - chmod +x helmfile_linux_amd64
    - mv helmfile_linux_amd64 /usr/local/bin/helmfile
    - helmfile --version
    # Installer kubectl
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - chmod +x kubectl
    - mv kubectl /usr/local/bin/
    - kubectl version --client
  script:
    - helmfile apply
  only:
    - main